# Generated by Django 5.0.1 on 2024-04-06 06:01

from django.db import migrations


class Migration(migrations.Migration):
    dependencies = [
        ("sales", "0001_initial"),
    ]

    operations = [
        migrations.RunSQL(
            """
        CREATE OR REPLACE VIEW sales_balance AS
            SELECT sales_invoice.id AS voucher_id,
                COALESCE(sum(pi.cash_balance), 0.0) AS cash_balance,
                COALESCE(sum(pi.metal_balance) FILTER (WHERE pi.metal_balance_currency::text = 'USD'::text), 0.0) AS gold_balance,
                COALESCE(sum(pi.metal_balance) FILTER (WHERE pi.metal_balance_currency::text = 'EUR'::text), 0.0) AS silver_balance,
                ARRAY[ROW(COALESCE(sum(pi.cash_balance), 0.0)::numeric(14,0), 'INR'::character varying(3))::money_value, ROW(COALESCE(sum(pi.metal_balance) FILTER (WHERE pi.metal_balance_currency::text = 'USD'::text), 0.0)::numeric(14,0), 'USD'::character varying(3))::money_value, ROW(COALESCE(sum(pi.metal_balance) FILTER (WHERE pi.metal_balance_currency::text = 'EUR'::text), 0.0)::numeric(14,0), 'EUR'::character varying(3))::money_value] AS balances,
                COALESCE(sum(pa.allocated) FILTER (WHERE pa.allocated_currency::text = 'INR'::text), 0.0) AS cash_received,
                COALESCE(sum(pa.allocated) FILTER (WHERE pa.allocated_currency::text = 'USD'::text), 0.0) AS gold_received,
                COALESCE(sum(pa.allocated) FILTER (WHERE pa.allocated_currency::text = 'EUR'::text), 0.0) AS silver_received,
                ARRAY[ROW(COALESCE(sum(pa.allocated) FILTER (WHERE pa.allocated_currency::text = 'INR'::text), 0.0)::numeric(14,0), 'INR'::character varying(3))::money_value, ROW(COALESCE(sum(pa.allocated) FILTER (WHERE pa.allocated_currency::text = 'USD'::text), 0.0)::numeric(14,0), 'USD'::character varying(3))::money_value, ROW(COALESCE(sum(pa.allocated) FILTER (WHERE pa.allocated_currency::text = 'EUR'::text), 0.0)::numeric(14,0), 'EUR'::character varying(3))::money_value] AS received
            FROM sales_invoice
            JOIN sales_invoiceitem pi ON pi.invoice_id = sales_invoice.id
            LEFT JOIN sales_receiptallocation pa ON pa.invoice_id = sales_invoice.id
            GROUP BY sales_invoice.id;""",
            reverse_sql="DROP VIEW IF EXISTS sales_balance;",
        )
    ]
