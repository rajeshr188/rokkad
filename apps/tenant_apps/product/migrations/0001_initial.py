# Generated by Django 5.0.1 on 2024-02-26 11:01

import django.contrib.postgres.fields.hstore
import django.db.models.deletion
import django_extensions.db.fields
import mptt.fields
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("contact", "0002_alter_address_customer_alter_address_area_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="Stock",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("reorderat", models.IntegerField(default=1)),
            ],
            options={
                "ordering": ("-created",),
            },
        ),
        migrations.CreateModel(
            name="StockLot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("quantity", models.IntegerField(default=0)),
                ("weight", models.DecimalField(decimal_places=3, max_digits=10)),
                (
                    "barcode",
                    models.CharField(
                        blank=True,
                        editable=False,
                        max_length=155,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "huid",
                    models.CharField(blank=True, max_length=6, null=True, unique=True),
                ),
                ("stock_code", models.CharField(blank=True, max_length=4, null=True)),
                (
                    "purchase_touch",
                    models.DecimalField(decimal_places=3, max_digits=10),
                ),
                (
                    "purchase_rate",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=10, null=True
                    ),
                ),
                ("is_unique", models.BooleanField(default=False)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Empty", "Empty"),
                            ("Available", "Available"),
                            ("Sold", "Sold"),
                            ("Approval", "Approval"),
                            ("Return", "Return"),
                        ],
                        default="Empty",
                        max_length=10,
                    ),
                ),
                (
                    "stock",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lots",
                        to="product.stock",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Attribute",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                (
                    "slug",
                    django_extensions.db.fields.AutoSlugField(
                        blank=True, editable=False, populate_from="name"
                    ),
                ),
            ],
            options={
                "ordering": ("id",),
            },
        ),
        migrations.CreateModel(
            name="Movement",
            fields=[
                (
                    "id",
                    models.CharField(max_length=3, primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=30)),
                ("direction", models.CharField(default="+", max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name="ProductVariant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sku", models.CharField(max_length=32, unique=True)),
                ("name", models.CharField(max_length=255, unique=True)),
                ("product_code", models.CharField(max_length=32, unique=True)),
                (
                    "attributes",
                    django.contrib.postgres.fields.hstore.HStoreField(
                        blank=True, default=dict
                    ),
                ),
                ("jattributes", models.JSONField(default=dict)),
            ],
        ),
        migrations.CreateModel(
            name="StockBalance",
            fields=[
                (
                    "stock",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="product.stock",
                    ),
                ),
                ("Closing_wt", models.DecimalField(decimal_places=3, max_digits=14)),
                ("Closing_qty", models.IntegerField()),
                ("in_wt", models.DecimalField(decimal_places=3, max_digits=14)),
                ("in_qty", models.IntegerField()),
                ("out_wt", models.DecimalField(decimal_places=3, max_digits=14)),
                ("out_qty", models.IntegerField()),
            ],
            options={
                "db_table": "stock_balance",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="StockLotBalance",
            fields=[
                (
                    "lot",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="product.stocklot",
                    ),
                ),
                ("Closing_wt", models.DecimalField(decimal_places=3, max_digits=14)),
                ("Closing_qty", models.IntegerField()),
                (
                    "in_wt",
                    models.DecimalField(decimal_places=3, default=0.0, max_digits=14),
                ),
                ("in_qty", models.IntegerField(default=0)),
                (
                    "out_wt",
                    models.DecimalField(decimal_places=3, default=0.0, max_digits=14),
                ),
                ("out_qty", models.IntegerField(default=0)),
            ],
            options={
                "db_table": "stockbatch_balance",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=128, unique=True)),
                (
                    "slug",
                    django_extensions.db.fields.AutoSlugField(
                        blank=True, editable=False, populate_from="name"
                    ),
                ),
                ("description", models.TextField(blank=True)),
                (
                    "background_image",
                    models.ImageField(
                        blank=True, null=True, upload_to="category-backgrounds"
                    ),
                ),
                ("lft", models.PositiveIntegerField(editable=False)),
                ("rght", models.PositiveIntegerField(editable=False)),
                ("tree_id", models.PositiveIntegerField(db_index=True, editable=False)),
                ("level", models.PositiveIntegerField(editable=False)),
                (
                    "parent",
                    mptt.fields.TreeForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="product.category",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PricingTier",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=128, unique=True)),
                ("description", models.TextField(blank=True)),
                ("minimum_quantity", models.PositiveIntegerField()),
                ("lft", models.PositiveIntegerField(editable=False)),
                ("rght", models.PositiveIntegerField(editable=False)),
                ("tree_id", models.PositiveIntegerField(db_index=True, editable=False)),
                ("level", models.PositiveIntegerField(editable=False)),
                (
                    "parent",
                    mptt.fields.TreeForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="product.pricingtier",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=128, unique=True)),
                ("description", models.TextField()),
                (
                    "attributes",
                    django.contrib.postgres.fields.hstore.HStoreField(
                        blank=True, default=dict
                    ),
                ),
                ("jattributes", models.JSONField(blank=True, default=dict, null=True)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products",
                        to="product.category",
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="ProductImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.ImageField(upload_to="product/")),
                ("alt", models.CharField(blank=True, max_length=128)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="product.product",
                    ),
                ),
            ],
            options={
                "ordering": ("-id",),
            },
        ),
        migrations.CreateModel(
            name="ProductType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=128)),
                ("has_variants", models.BooleanField(default=True)),
                (
                    "product_attributes",
                    models.ManyToManyField(
                        blank=True, related_name="product_types", to="product.attribute"
                    ),
                ),
                (
                    "variant_attributes",
                    models.ManyToManyField(
                        blank=True,
                        related_name="product_variant_types",
                        to="product.attribute",
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
            },
        ),
        migrations.AddField(
            model_name="product",
            name="product_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="products",
                to="product.producttype",
            ),
        ),
        migrations.AddField(
            model_name="stocklot",
            name="variant",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="stock_lots",
                to="product.productvariant",
            ),
        ),
        migrations.AddField(
            model_name="stock",
            name="variant",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="stocks",
                to="product.productvariant",
            ),
        ),
        migrations.AddField(
            model_name="productvariant",
            name="product",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="variants",
                to="product.product",
            ),
        ),
        migrations.CreateModel(
            name="PricingTierProductPrice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "purchase_price",
                    models.DecimalField(decimal_places=3, max_digits=13),
                ),
                ("selling_price", models.DecimalField(decimal_places=3, max_digits=13)),
                (
                    "pricing_tier",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="price_list",
                        to="product.pricingtier",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="product.productvariant",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Price",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "purchase_price",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                ("selling_price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "contact",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="prices",
                        to="contact.customer",
                    ),
                ),
                (
                    "price_tier",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="product.pricingtier",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="product.productvariant",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StockStatement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "method",
                    models.CharField(
                        choices=[("Auto", "Auto"), ("Physical", "Physical")],
                        default="Auto",
                        max_length=20,
                    ),
                ),
                ("created", models.DateTimeField(auto_now=True)),
                ("Closing_wt", models.DecimalField(decimal_places=3, max_digits=14)),
                ("Closing_qty", models.IntegerField()),
                (
                    "total_wt_in",
                    models.DecimalField(decimal_places=3, default=0.0, max_digits=14),
                ),
                (
                    "total_wt_out",
                    models.DecimalField(decimal_places=3, default=0.0, max_digits=14),
                ),
                ("total_qty_in", models.IntegerField(default=0.0)),
                ("total_qty_out", models.IntegerField(default=0.0)),
                (
                    "lot",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="product.stocklot",
                    ),
                ),
                (
                    "stock",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="product.stock"
                    ),
                ),
            ],
            options={
                "ordering": ("created",),
                "get_latest_by": ["created"],
            },
        ),
        migrations.CreateModel(
            name="StockTransaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("quantity", models.IntegerField(default=0)),
                (
                    "weight",
                    models.DecimalField(decimal_places=3, default=0, max_digits=10),
                ),
                ("description", models.TextField()),
                (
                    "lot",
                    models.ForeignKey(
                        default=1,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="product.stocklot",
                    ),
                ),
                (
                    "movement_type",
                    models.ForeignKey(
                        default="P",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="product.movement",
                    ),
                ),
                (
                    "stock",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="product.stock"
                    ),
                ),
            ],
            options={
                "ordering": ("-created",),
                "get_latest_by": ["created"],
            },
        ),
        migrations.CreateModel(
            name="VariantImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="variant_images",
                        to="product.productimage",
                    ),
                ),
                (
                    "variant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="variant_images",
                        to="product.productvariant",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="productvariant",
            name="images",
            field=models.ManyToManyField(
                through="product.VariantImage", to="product.productimage"
            ),
        ),
        migrations.CreateModel(
            name="AttributeValue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("value", models.CharField(default="", max_length=100)),
                (
                    "slug",
                    django_extensions.db.fields.AutoSlugField(
                        blank=True, editable=False, populate_from="name"
                    ),
                ),
                (
                    "attribute",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="values",
                        to="product.attribute",
                    ),
                ),
            ],
            options={
                "ordering": ("-id",),
                "unique_together": {("name", "attribute")},
            },
        ),
    ]
