# Generated by Django 5.0.1 on 2024-04-13 08:43

from django.db import migrations


class Migration(migrations.Migration):
    dependencies = [
        ("dea", "0006_alter_account_entity"),
    ]
    ledger_balance_sql = """
    CREATE VIEW ledger_balance AS
        WITH ls AS (
            SELECT DISTINCT ON (dea_ledgerstatement.ledgerno_id) 
                dea_ledgerstatement.id,
                dea_ledgerstatement.created,
                dea_ledgerstatement."ClosingBalance",
                dea_ledgerstatement.ledgerno_id
            FROM dea_ledgerstatement
            ORDER BY dea_ledgerstatement.ledgerno_id, dea_ledgerstatement.created DESC
        )
        SELECT dea_ledger.id AS ledgerno_id,
            ls.created AS ls_created,
            ls."ClosingBalance" AS opening_balance,
            ARRAY(
                SELECT ROW(
                    COALESCE(SUM(dea_ledgertransaction.amount) FILTER (WHERE dea_ledgertransaction.ledgerno_id = dea_ledger.id),0)::numeric(14,3),
                    dea_ledgertransaction.amount_currency
                )::money_value AS "row"
                FROM dea_ledgertransaction
                WHERE (ls.created IS NULL OR dea_ledgertransaction.created >= ls.created)
                GROUP BY dea_ledgertransaction.amount_currency
            ) AS cr,
            ARRAY(
                SELECT ROW(
                    COALESCE(SUM(dea_ledgertransaction.amount) FILTER (WHERE dea_ledgertransaction.ledgerno_dr_id = dea_ledger.id),0)::numeric(14,3),
                    dea_ledgertransaction.amount_currency
                )::money_value AS "row"
                FROM dea_ledgertransaction
                WHERE (ls.created IS NULL OR dea_ledgertransaction.created >= ls.created)
                GROUP BY dea_ledgertransaction.amount_currency
            ) AS dr,
            ARRAY(
                SELECT ROW(
                    (COALESCE(SUM(dea_ledgertransaction.amount) FILTER (WHERE dea_ledgertransaction.ledgerno_id = dea_ledger.id),0) - COALESCE(SUM(dea_ledgertransaction.amount) FILTER (WHERE dea_ledgertransaction.ledgerno_dr_id = dea_ledger.id),0))::numeric(14,3),
                    dea_ledgertransaction.amount_currency
                )::money_value
                FROM dea_ledgertransaction
                WHERE (ls.created IS NULL OR dea_ledgertransaction.created >= ls.created)
                GROUP BY dea_ledgertransaction.amount_currency
            ) AS closing_balance
        FROM dea_ledger
        LEFT JOIN ls ON dea_ledger.id = ls.ledgerno_id
        JOIN dea_accounttype at ON at.id = dea_ledger."AccountType_id";
    """
    account_balance_sql = """
    CREATE VIEW account_balance AS
        WITH acc_st AS (
            SELECT DISTINCT ON (dea_accountstatement."AccountNo_id") 
                dea_accountstatement.id,
                dea_accountstatement.created,
                dea_accountstatement."ClosingBalance",
                dea_accountstatement."AccountNo_id"
            FROM dea_accountstatement
            ORDER BY dea_accountstatement."AccountNo_id", dea_accountstatement.created DESC
        )
        SELECT dea_account.id AS "AccountNo_id",
            dea_account.contact_id AS contact_id,
            acc_st.created AS ls_created,
            acc_st."ClosingBalance" AS opening_balance,
            ARRAY( SELECT ROW(
                    COALESCE(sum(dea_accounttransaction.amount),0)::numeric(14,3),
                    dea_accounttransaction.amount_currency)::money_value AS "row"
                FROM dea_accounttransaction
                WHERE dea_accounttransaction."Account_id" = dea_account.id 
                AND dea_accounttransaction."XactTypeCode_id"::text = 'Dr'::text 
                AND ((acc_st.created isnull) or dea_accounttransaction.created >= acc_st.created)
                GROUP BY dea_accounttransaction.amount_currency) AS cr,
            ARRAY( SELECT ROW(
                    COALESCE(sum(dea_accounttransaction.amount),0)::numeric(14,3), 
                    dea_accounttransaction.amount_currency)::money_value AS "row"
                FROM dea_accounttransaction
                WHERE dea_accounttransaction."Account_id" = dea_account.id 
                AND dea_accounttransaction."XactTypeCode_id"::text = 'Cr'::text 
                AND ((acc_st.created isnull) or dea_accounttransaction.created >= acc_st.created)
                GROUP BY dea_accounttransaction.amount_currency) AS dr,
            ARRAY( SELECT ROW(
                    (COALESCE(sum(dea_accounttransaction.amount) FILTER (WHERE dea_accounttransaction."XactTypeCode_id"::text = 'Dr'::text),0) - COALESCE(sum(dea_accounttransaction.amount) FILTER (WHERE dea_accounttransaction."XactTypeCode_id"::text = 'Cr'::text),0))::numeric(14,3), dea_accounttransaction.amount_currency)::money_value
                FROM dea_accounttransaction
                WHERE dea_accounttransaction."Account_id" = dea_account.id
                AND ((acc_st.created IS NULL) or dea_accounttransaction.created >= acc_st.created)
                GROUP BY dea_accounttransaction.amount_currency) AS closing_balance
        FROM dea_account
            LEFT JOIN acc_st ON dea_account.id = acc_st."AccountNo_id";
    """
    operations = [
        migrations.RunSQL("DROP VIEW IF EXISTS ledger_balance;"),
        migrations.RunSQL("DROP VIEW IF EXISTS account_balance;"),
        migrations.RunSQL(ledger_balance_sql, reverse_sql="DROP VIEW ledger_balance;"),
        migrations.RunSQL(
            account_balance_sql, reverse_sql="DROP VIEW account_balance;"
        ),
    ]
